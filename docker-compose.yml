version: "3"
services:
  frontend:
    container_name: website
    build: ./Frontend/website
    stdin_open: true
    tty: true
    expose:
      - 3000
    ports:
      - "3000:3000"
    volumes:
      - ./Frontend/website/src:/app/src
    networks:
      backend:
        ipv4_address: 172.28.0.9
    depends_on:
      - "dns"

  dns:
    container_name: dns
    build: ./Backend/DNS
    expose:
      - 81
    ports:
      - 8001:81
    networks:
      backend:
        ipv4_address: 172.28.0.2
    depends_on:
      - "lb1"
      - "lb2"

  lb1:
    container_name: lb1
    build: ./Backend/Load Balancer
    ports:
      - 8002:82
    expose:
      - 82
    networks:
      backend:
        ipv4_address: 172.28.0.3
    depends_on:
      - "server1"
      - "server2"
      - "server3"
  lb2:
    container_name: lb2
    build: ./Backend/Load Balancer
    ports:
      - 8003:83
    expose:
      - 83
    networks:
      backend:
        ipv4_address: 172.28.0.4
    depends_on:
      - "server1"
      - "server2"
      - "server3"

  server1:
    container_name: server1
    image: "node:8"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
      - PORT=84
    volumes:
      - ./Backend/Server:/home/node/app
    ports:
      - "8004:84"
    expose:
      - 84
    networks:
      backend:
        ipv4_address: 172.28.0.5
    command: "npm start"

  server2:
    container_name: server2
    image: "node:8"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
      - PORT=85
    volumes:
      - ./Backend/Server:/home/node/app
    networks:
      backend:
        ipv4_address: 172.28.0.6
    ports:
      - "8005:85"
    expose:
      - 85
    command: "npm start"

  server3:
    container_name: server3
    image: "node:8"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
      - PORT=86
    volumes:
      - ./Backend/Server:/home/node/app
    ports:
      - "8006:86"
    expose:
      - 86
    command: "npm start"
    networks:
      backend:
        ipv4_address: 172.28.0.7

  db:
    container_name: mysql
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: users
      MYSQL_USER: Saar
      MYSQL_PASSWORD: Password
    volumes:
        - type: bind
          source: ./Backend/MySQL
          target: /var/lib/mysql
    ports:
      - 6033:3306
    networks:
      backend:
        ipv4_address: 172.28.0.8

networks:
  backend:
    ipam:
      config:
        - subnet: 172.28.0.0/16
